#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define ALPHABET_SIZE 26


void encrypt(char *plaintext, char *key) {
    int i;
    for (i = 0; plaintext[i] != '\0'; i++) {
        if (isalpha(plaintext[i])) {
            if (islower(plaintext[i])) {
                plaintext[i] = key[plaintext[i] - 'a'];
            } else if (isupper(plaintext[i])) {
                plaintext[i] = toupper(key[plaintext[i] - 'A']);
            }
        }
    }
}

int main() {
    char plaintext[1000];
    char key[ALPHABET_SIZE + 1];
    int i;

    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);

    printf("Enter the key (26 unique characters): ");
    fgets(key, sizeof(key), stdin);

   
    plaintext[strcspn(plaintext, "\n")] = '\0';
    key[strcspn(key, "\n")] = '\0';

    
    if (strlen(key) != ALPHABET_SIZE) {
        printf("Error: Key must be 26 characters long.\n");
        return 1;
    }

    for (i = 0; i < ALPHABET_SIZE; i++) {
        if (!isalpha(key[i])) {
            printf("Error: Key must contain only alphabetic characters.\n");
            return 1;
        }
    }

    
    encrypt(plaintext, key);

    
    printf("Encrypted text: %s\n", plaintext);

    return 0;
}
